# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'flightSim.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(897, 825)
        MainWindow.setStyleSheet("background-color:rgb(180, 225, 255);")
        self.mainPage = QtWidgets.QWidget(MainWindow)
        self.mainPage.setObjectName("mainPage")
        self.tabWidget = QtWidgets.QTabWidget(self.mainPage)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 881, 791))
        self.tabWidget.setObjectName("tabWidget")
        self.Simulation = QtWidgets.QWidget()
        self.Simulation.setObjectName("Simulation")
        self.wind_box = QtWidgets.QDoubleSpinBox(self.Simulation)
        self.wind_box.setGeometry(QtCore.QRect(480, 430, 81, 22))
        self.wind_box.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.wind_box.setDecimals(0)
        self.wind_box.setMaximum(10000.0)
        self.wind_box.setObjectName("wind_box")
        self.af_d_name = QtWidgets.QLineEdit(self.Simulation)
        self.af_d_name.setGeometry(QtCore.QRect(400, 50, 71, 20))
        self.af_d_name.setStyleSheet("")
        self.af_d_name.setObjectName("af_d_name")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.Simulation)
        self.lineEdit_3.setGeometry(QtCore.QRect(10, 10, 113, 20))
        self.lineEdit_3.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lc_name = QtWidgets.QLineEdit(self.Simulation)
        self.lc_name.setGeometry(QtCore.QRect(400, 400, 113, 20))
        self.lc_name.setStyleSheet("background-color:rgb(255, 170, 255);")
        self.lc_name.setObjectName("lc_name")
        self.semi_name = QtWidgets.QLineEdit(self.Simulation)
        self.semi_name.setGeometry(QtCore.QRect(400, 210, 81, 20))
        self.semi_name.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.semi_name.setObjectName("semi_name")
        self.semi_input = QtWidgets.QDoubleSpinBox(self.Simulation)
        self.semi_input.setGeometry(QtCore.QRect(510, 210, 81, 22))
        self.semi_input.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.semi_input.setDecimals(1)
        self.semi_input.setObjectName("semi_input")
        self.designWindow = QtWidgets.QWidget(self.Simulation)
        self.designWindow.setGeometry(QtCore.QRect(10, 30, 351, 181))
        self.designWindow.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.designWindow.setObjectName("designWindow")
        self.nc_l_input = QtWidgets.QDoubleSpinBox(self.Simulation)
        self.nc_l_input.setGeometry(QtCore.QRect(690, 120, 81, 22))
        self.nc_l_input.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.nc_l_input.setDecimals(1)
        self.nc_l_input.setObjectName("nc_l_input")
        self.fn_name = QtWidgets.QLineEdit(self.Simulation)
        self.fn_name.setGeometry(QtCore.QRect(400, 120, 113, 20))
        self.fn_name.setStyleSheet("background-color:rgb(255, 170, 255);")
        self.fn_name.setObjectName("fn_name")
        self.launch_button = QtWidgets.QPushButton(self.Simulation)
        self.launch_button.setGeometry(QtCore.QRect(620, 480, 141, 81))
        self.launch_button.setStyleSheet("background-color:rgb(119, 255, 128);")
        self.launch_button.setObjectName("launch_button")
        self.simWindow = QtWidgets.QWidget(self.Simulation)
        self.simWindow.setGeometry(QtCore.QRect(10, 380, 351, 241))
        self.simWindow.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.simWindow.setObjectName("simWindow")
        self.tip_name = QtWidgets.QLineEdit(self.Simulation)
        self.tip_name.setGeometry(QtCore.QRect(400, 180, 81, 20))
        self.tip_name.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.tip_name.setObjectName("tip_name")
        self.nc_name = QtWidgets.QLineEdit(self.Simulation)
        self.nc_name.setGeometry(QtCore.QRect(610, 20, 141, 20))
        self.nc_name.setStyleSheet("background-color:rgb(255, 170, 255);")
        self.nc_name.setObjectName("nc_name")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.Simulation)
        self.lineEdit_4.setGeometry(QtCore.QRect(10, 360, 113, 20))
        self.lineEdit_4.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.alt_box = QtWidgets.QDoubleSpinBox(self.Simulation)
        self.alt_box.setGeometry(QtCore.QRect(480, 460, 81, 22))
        self.alt_box.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.alt_box.setDecimals(0)
        self.alt_box.setMaximum(10000.0)
        self.alt_box.setObjectName("alt_box")
        self.tip_input = QtWidgets.QDoubleSpinBox(self.Simulation)
        self.tip_input.setGeometry(QtCore.QRect(510, 180, 81, 22))
        self.tip_input.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.tip_input.setDecimals(1)
        self.tip_input.setObjectName("tip_input")
        self.nc_l_name = QtWidgets.QLineEdit(self.Simulation)
        self.nc_l_name.setGeometry(QtCore.QRect(610, 120, 61, 20))
        self.nc_l_name.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.nc_l_name.setObjectName("nc_l_name")
        self.wind_name = QtWidgets.QLineEdit(self.Simulation)
        self.wind_name.setGeometry(QtCore.QRect(402, 430, 61, 20))
        self.wind_name.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.wind_name.setObjectName("wind_name")
        self.alt_name = QtWidgets.QLineEdit(self.Simulation)
        self.alt_name.setGeometry(QtCore.QRect(400, 460, 61, 20))
        self.alt_name.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.alt_name.setObjectName("alt_name")
        self.nc_list = QtWidgets.QListWidget(self.Simulation)
        self.nc_list.setGeometry(QtCore.QRect(610, 50, 141, 61))
        self.nc_list.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.nc_list.setObjectName("nc_list")
        item = QtWidgets.QListWidgetItem()
        self.nc_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.nc_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.nc_list.addItem(item)
        self.af_d_input = QtWidgets.QDoubleSpinBox(self.Simulation)
        self.af_d_input.setGeometry(QtCore.QRect(480, 50, 81, 22))
        self.af_d_input.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.af_d_input.setDecimals(1)
        self.af_d_input.setObjectName("af_d_input")
        self.af_l_name = QtWidgets.QLineEdit(self.Simulation)
        self.af_l_name.setGeometry(QtCore.QRect(400, 80, 71, 20))
        self.af_l_name.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.af_l_name.setObjectName("af_l_name")
        self.af_l_input = QtWidgets.QDoubleSpinBox(self.Simulation)
        self.af_l_input.setGeometry(QtCore.QRect(480, 80, 81, 22))
        self.af_l_input.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.af_l_input.setDecimals(1)
        self.af_l_input.setObjectName("af_l_input")
        self.af_name = QtWidgets.QLineEdit(self.Simulation)
        self.af_name.setGeometry(QtCore.QRect(400, 20, 131, 20))
        self.af_name.setStyleSheet("background-color:rgb(255, 170, 255);")
        self.af_name.setObjectName("af_name")
        self.prev_button = QtWidgets.QPushButton(self.Simulation)
        self.prev_button.setGeometry(QtCore.QRect(610, 290, 151, 71))
        self.prev_button.setStyleSheet("background-color:rgb(119, 255, 128);")
        self.prev_button.setObjectName("prev_button")
        self.sweep_name = QtWidgets.QLineEdit(self.Simulation)
        self.sweep_name.setGeometry(QtCore.QRect(400, 150, 101, 20))
        self.sweep_name.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.sweep_name.setObjectName("sweep_name")
        self.sweep_input = QtWidgets.QDoubleSpinBox(self.Simulation)
        self.sweep_input.setGeometry(QtCore.QRect(510, 150, 81, 22))
        self.sweep_input.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.sweep_input.setDecimals(1)
        self.sweep_input.setObjectName("sweep_input")
        self.root_name = QtWidgets.QLineEdit(self.Simulation)
        self.root_name.setGeometry(QtCore.QRect(400, 240, 81, 20))
        self.root_name.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.root_name.setObjectName("root_name")
        self.root_input = QtWidgets.QDoubleSpinBox(self.Simulation)
        self.root_input.setGeometry(QtCore.QRect(510, 240, 81, 22))
        self.root_input.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.root_input.setDecimals(1)
        self.root_input.setObjectName("root_input")
        self.par_name = QtWidgets.QLineEdit(self.Simulation)
        self.par_name.setGeometry(QtCore.QRect(610, 150, 113, 20))
        self.par_name.setStyleSheet("background-color:rgb(255, 170, 255);")
        self.par_name.setObjectName("par_name")
        self.par_list = QtWidgets.QListWidget(self.Simulation)
        self.par_list.setGeometry(QtCore.QRect(610, 180, 141, 61))
        self.par_list.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.par_list.setObjectName("par_list")
        item = QtWidgets.QListWidgetItem()
        self.par_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.par_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.par_list.addItem(item)
        self.motor_name = QtWidgets.QLineEdit(self.Simulation)
        self.motor_name.setGeometry(QtCore.QRect(400, 280, 113, 20))
        self.motor_name.setStyleSheet("background-color:rgb(255, 170, 255);")
        self.motor_name.setObjectName("motor_name")
        self.motor_list = QtWidgets.QListWidget(self.Simulation)
        self.motor_list.setGeometry(QtCore.QRect(400, 310, 71, 61))
        self.motor_list.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.motor_list.setObjectName("motor_list")
        item = QtWidgets.QListWidgetItem()
        self.motor_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.motor_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.motor_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.motor_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.motor_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.motor_list.addItem(item)
        self.ap_label = QtWidgets.QLineEdit(self.Simulation)
        self.ap_label.setGeometry(QtCore.QRect(400, 510, 81, 20))
        self.ap_label.setObjectName("ap_label")
        self.time_label = QtWidgets.QLineEdit(self.Simulation)
        self.time_label.setGeometry(QtCore.QRect(400, 540, 91, 20))
        self.time_label.setObjectName("time_label")
        self.dV_label = QtWidgets.QLineEdit(self.Simulation)
        self.dV_label.setGeometry(QtCore.QRect(400, 570, 91, 20))
        self.dV_label.setObjectName("dV_label")
        self.ap_val = QtWidgets.QLineEdit(self.Simulation)
        self.ap_val.setGeometry(QtCore.QRect(500, 510, 81, 20))
        self.ap_val.setObjectName("ap_val")
        self.time_val = QtWidgets.QLineEdit(self.Simulation)
        self.time_val.setGeometry(QtCore.QRect(500, 540, 81, 20))
        self.time_val.setObjectName("time_val")
        self.dV_val = QtWidgets.QLineEdit(self.Simulation)
        self.dV_val.setGeometry(QtCore.QRect(500, 570, 81, 20))
        self.dV_val.setObjectName("dV_val")
        self.tabWidget.addTab(self.Simulation, "")
        self.Explanations = QtWidgets.QWidget()
        self.Explanations.setObjectName("Explanations")
        self.fin_exp = QtWidgets.QTextEdit(self.Explanations)
        self.fin_exp.setGeometry(QtCore.QRect(10, 40, 401, 141))
        self.fin_exp.setObjectName("fin_exp")
        self.fin_pic = QtWidgets.QWidget(self.Explanations)
        self.fin_pic.setGeometry(QtCore.QRect(570, 70, 201, 101))
        self.fin_pic.setObjectName("fin_pic")
        self.fin_exp_name = QtWidgets.QLineEdit(self.Explanations)
        self.fin_exp_name.setGeometry(QtCore.QRect(20, 10, 113, 20))
        self.fin_exp_name.setObjectName("fin_exp_name")
        self.nc_exp_name = QtWidgets.QLineEdit(self.Explanations)
        self.nc_exp_name.setGeometry(QtCore.QRect(20, 200, 113, 20))
        self.nc_exp_name.setObjectName("nc_exp_name")
        self.nc_exp = QtWidgets.QTextEdit(self.Explanations)
        self.nc_exp.setGeometry(QtCore.QRect(10, 230, 401, 141))
        self.nc_exp.setObjectName("nc_exp")
        self.sm_exp_name = QtWidgets.QLineEdit(self.Explanations)
        self.sm_exp_name.setGeometry(QtCore.QRect(30, 400, 113, 20))
        self.sm_exp_name.setObjectName("sm_exp_name")
        self.sm_exp = QtWidgets.QTextEdit(self.Explanations)
        self.sm_exp.setGeometry(QtCore.QRect(20, 430, 401, 141))
        self.sm_exp.setObjectName("sm_exp")
        self.nc_pic = QtWidgets.QWidget(self.Explanations)
        self.nc_pic.setGeometry(QtCore.QRect(560, 240, 201, 101))
        self.nc_pic.setObjectName("nc_pic")
        self.sm_pic = QtWidgets.QWidget(self.Explanations)
        self.sm_pic.setGeometry(QtCore.QRect(570, 440, 201, 101))
        self.sm_pic.setObjectName("sm_pic")
        self.tabWidget.addTab(self.Explanations, "")
        MainWindow.setCentralWidget(self.mainPage)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.af_d_name.setText(_translate("MainWindow", "Diameter (in)"))
        self.lineEdit_3.setText(_translate("MainWindow", "Design Window"))
        self.lc_name.setText(_translate("MainWindow", "Launch Conditions"))
        self.semi_name.setText(_translate("MainWindow", "Semi Span (in)"))
        self.fn_name.setText(_translate("MainWindow", "Fin Customizations"))
        self.launch_button.setText(_translate("MainWindow", "Launch!"))
        self.tip_name.setText(_translate("MainWindow", "Tip Chord (in)"))
        self.nc_name.setText(_translate("MainWindow", "Nose Cone Customizations"))
        self.lineEdit_4.setText(_translate("MainWindow", "Launch Window"))
        self.nc_l_name.setText(_translate("MainWindow", "Length (in)"))
        self.wind_name.setText(_translate("MainWindow", "Wind"))
        self.alt_name.setText(_translate("MainWindow", "Altitude"))
        __sortingEnabled = self.nc_list.isSortingEnabled()
        self.nc_list.setSortingEnabled(False)
        item = self.nc_list.item(0)
        item.setText(_translate("MainWindow", "Tangent Ojive"))
        item = self.nc_list.item(1)
        item.setText(_translate("MainWindow", "Elliptic"))
        item = self.nc_list.item(2)
        item.setText(_translate("MainWindow", "Conic"))
        self.nc_list.setSortingEnabled(__sortingEnabled)
        self.af_l_name.setText(_translate("MainWindow", "Length (in)"))
        self.af_name.setText(_translate("MainWindow", "Air Frame Customizations"))
        self.prev_button.setText(_translate("MainWindow", "Preview Design"))
        self.sweep_name.setText(_translate("MainWindow", "Sweep Angle (deg)"))
        self.root_name.setText(_translate("MainWindow", "Root Chord (in)"))
        self.par_name.setText(_translate("MainWindow", "Parachute"))
        __sortingEnabled = self.par_list.isSortingEnabled()
        self.par_list.setSortingEnabled(False)
        item = self.par_list.item(0)
        item.setText(_translate("MainWindow", "Small (15 in)"))
        item = self.par_list.item(1)
        item.setText(_translate("MainWindow", "Medium (36 in)"))
        item = self.par_list.item(2)
        item.setText(_translate("MainWindow", "Large (48 in)"))
        self.par_list.setSortingEnabled(__sortingEnabled)
        self.motor_name.setText(_translate("MainWindow", "Motor"))
        __sortingEnabled = self.motor_list.isSortingEnabled()
        self.motor_list.setSortingEnabled(False)
        item = self.motor_list.item(0)
        item.setText(_translate("MainWindow", "G"))
        item = self.motor_list.item(1)
        item.setText(_translate("MainWindow", "H"))
        item = self.motor_list.item(2)
        item.setText(_translate("MainWindow", "I"))
        item = self.motor_list.item(3)
        item.setText(_translate("MainWindow", "K"))
        item = self.motor_list.item(4)
        item.setText(_translate("MainWindow", "L"))
        self.motor_list.setSortingEnabled(__sortingEnabled)
        self.ap_label.setText(_translate("MainWindow", "Apogee (ft):"))
        self.time_label.setText(_translate("MainWindow", "Total Flight Time:"))
        self.dV_label.setText(_translate("MainWindow", "Descent Velocity:"))
        self.ap_val.setText(_translate("MainWindow", "0"))
        self.time_val.setText(_translate("MainWindow", "0"))
        self.dV_val.setText(_translate("MainWindow", "0"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Simulation), _translate("MainWindow", "Tab 1"))
        self.fin_exp.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Google Sans\',\'Roboto\',\'Arial\',\'sans-serif\'; font-size:18px; color:#001d35; background-color:#ffffff;\">&quot;Rocket science&quot; is </span><span style=\" font-family:\'Google Sans\',\'Roboto\',\'Arial\',\'sans-serif\'; font-size:18px; font-weight:496; color:#000000; background-color:#ffffff;\">a colloquial term for the science and engineering of rockets, including aerospace engineering, orbital mechanics, and chemistry</span><span style=\" font-family:\'Google Sans\',\'Roboto\',\'Arial\',\'sans-serif\'; font-size:18px; color:#001d35; background-color:#ffffff;\">. It can also refer to something that is very difficult to understand or learn. For example, &quot;The job is challenging, but it\'s not exactly rocket science&quot;</span></p></body></html>"))
        self.fin_exp_name.setText(_translate("MainWindow", "Fins"))
        self.nc_exp_name.setText(_translate("MainWindow", "Nose Cones"))
        self.nc_exp.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Google Sans\',\'Roboto\',\'Arial\',\'sans-serif\'; font-size:18px; color:#001d35; background-color:#ffffff;\">&quot;Rocket science&quot; is </span><span style=\" font-family:\'Google Sans\',\'Roboto\',\'Arial\',\'sans-serif\'; font-size:18px; font-weight:496; color:#000000; background-color:#ffffff;\">a colloquial term for the science and engineering of rockets, including aerospace engineering, orbital mechanics, and chemistry</span><span style=\" font-family:\'Google Sans\',\'Roboto\',\'Arial\',\'sans-serif\'; font-size:18px; color:#001d35; background-color:#ffffff;\">. It can also refer to something that is very difficult to understand or learn. For example, &quot;The job is challenging, but it\'s not exactly rocket science&quot;</span></p></body></html>"))
        self.sm_exp_name.setText(_translate("MainWindow", "Static Margin"))
        self.sm_exp.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Google Sans\',\'Roboto\',\'Arial\',\'sans-serif\'; font-size:18px; color:#001d35; background-color:#ffffff;\">&quot;Rocket science&quot; is </span><span style=\" font-family:\'Google Sans\',\'Roboto\',\'Arial\',\'sans-serif\'; font-size:18px; font-weight:496; color:#000000; background-color:#ffffff;\">a colloquial term for the science and engineering of rockets, including aerospace engineering, orbital mechanics, and chemistry</span><span style=\" font-family:\'Google Sans\',\'Roboto\',\'Arial\',\'sans-serif\'; font-size:18px; color:#001d35; background-color:#ffffff;\">. It can also refer to something that is very difficult to understand or learn. For example, &quot;The job is challenging, but it\'s not exactly rocket science&quot;</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Explanations), _translate("MainWindow", "Explanations"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
